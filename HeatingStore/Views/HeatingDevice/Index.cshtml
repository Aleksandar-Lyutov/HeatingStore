@using HeatingStore.Models.Order;
@model IEnumerable<HeatingStore.Models.HeatingDevice.HeatingDeviceIndexVM>

@{
    ViewData["Title"] = "Index";
}

<h1>Heating Devices</h1>
@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a href="@Url.Action("Create")" class="btn1">Create New</a>
    </p>
}
<form asp-controller="Heating Device" asp-action="Index" method="get">
    <p>
        Manufacturer:<input type="text" name="SearchStringManufacturerName" />
        Category:<input type="text" name="SearchStringCategoryName" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.HeatingDeviceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ManufacturerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Picture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            @if (this.User.Identity.IsAuthenticated)
            {
                <th>
                    Order
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.HeatingDeviceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManufacturerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    <img src="@Html.DisplayFor(modelItem=>item.Picture)" alt="Image" width="100" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <td>
                    @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                    {
                    HeatingDeviceId = item.Id
                    })
                        </td>
                }
                <td>
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a href="@Url.Action("Edit", new {id = item.Id})" class="btn1">Edit</a>
                    }
                    <a href="@Url.Action("Details", new {id = item.Id})" class="btn1">Detail</a>
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a href="@Url.Action("Delete", new {id = item.Id})" class="btn1">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
